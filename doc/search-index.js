var searchIndex = JSON.parse('{\
"lib":{"doc":"","t":"DDDFLFLLLLLLLFFFFFFFLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFLFFLFFLLLFFLFFLLLFFLLLLLLFFFFLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF","n":["DataFrame","Equation","ZeroEquation","add","add_column","add_float","add_value","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","dataframe_create","divide","divide_float","factorial","factorial_float","fibonacci","fibonacci_float","from","from","from","get_a","get_b","get_column","get_column_count","get_column_index","get_column_name","get_columns","get_data","get_error","get_operator","get_row_count","get_sol","get_sol","get_value","get_values","into","into","into","is_even","is_even_float","is_odd","is_odd_float","is_perfect_cube","is_perfect_cube_float","is_perfect_power","is_perfect_power_float","is_perfect_square","is_perfect_square_float","is_prime","is_prime_float","is_valid","modulo","modulo_float","move_to_sol","multiply","multiply_float","new","new","new","power","power_float","remove_value","root","root_float","set_a","set_b","set_operator","subtract","subtract_float","try_from","try_from","try_from","try_into","try_into","try_into","two_vector_median","two_vector_median_float","two_vector_mode","two_vector_mode_float","type_id","type_id","type_id","vector_add","vector_add_float","vector_average","vector_average_float","vector_divide","vector_divide_float","vector_interquartile_range","vector_interquartile_range_float","vector_max","vector_max_float","vector_mean","vector_mean_float","vector_median","vector_median_float","vector_min","vector_min_float","vector_mode","vector_modulo","vector_modulo_float","vector_multiply","vector_multiply_float","vector_power","vector_power_float","vector_product","vector_product_float","vector_quartiles","vector_quartiles_float","vector_range","vector_range_float","vector_root","vector_root_float","vector_standard_deviation","vector_standard_deviation_float","vector_subtract","vector_subtract_float","vector_sum","vector_sum_float","vector_variance","vector_variance_float"],"q":[[0,"lib"]],"d":["A dataframe struct similar to pythons pandas dataframe","Equation with an a, b, and operator. Sol is the solution …","ZeroEquation is an equation with a list of values on one …","Returns the sum of two numbers.","Adds a column to the dataframe","Add for floating point numbers.","","","","","","","","Creates a new dataframe","Returns the quotient of two numbers.","Returns the quotient of two floating point numbers.","Returns the factorial of a number.","Returns the factorial of a floating point number.","Returns the fibonacci of a number.","Returns the fibbonacci of a floating point number.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","returns the a value","returns the b value","Returns the column names","Returns the column names","Returns the column names","Returns the column names","Returns the column names","Returns the data","","returns the operator","Returns the column names","Returns the solution to the equation","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the number is even.","Returns true if the floating point number is even.","Returns true if the number is odd.","Returns true if the floating point number is odd.","Returns true if the number is perfect cube.","Returns true if the floating point number is perfect cube.","Returns true if the number is perfect power.","Returns true if the floating point number is perfect power.","Returns true if the number is positive.","Returns true if the floating point number is perfect …","Returns true if the number is prime.","Returns true if the floating point number is prime.","","Returns the remainder of two numbers.","Returns the remainder of two floating point numbers.","","Multiply left and right numbers.","Multiply left and right floating point numbers.","Creates a new dataframe","Creates a new equation","","Returns the left number raised to the right number.","Returns the left floating point number raised to the right …","","Returns the left number to the root of the right number.","Returns the left floating point number to the root of the …","sets the a value","sets the b value","sets the operator","Returns the difference of two numbers.","Returns the difference of two floating point numbers.","","","","","","","Returns the median of two vectors","Returns the median of two vectors float","Returns the mode of two vectors","Returns the mode of two vectors float","","","","Returns the sum of two vectors","","Returns the average of two vectors","Returns the average of two vectors float","Returns the quotient of two vectors","Returns the quotient of two float vectors","Returns the interquartile range of all elements in a vector","Returns the interquartile range of all elements in a float …","Returns the maximum of two vectors","Returns the maximum of two vectors float","Returns the mean of all elements in a vector","Returns the mean of all elements in a float vector","Returns the median of all elements in a vector","Returns the median of all elements in a float vector","Returns the minimum of two vectors","Returns the minimum of two vectors float","","Returns the remainder of two vectors","Returns the modoulo of two vectors float","Returns the product of two vectors","Returns the product of two float vectors","Returns the power of two vectors","Returns the power of two vectors float","Returns the product of all elements in a vector","Returns the product of all elements in a float vector","Returns the quartiles of all elements in a vector","Returns the quartiles of all elements in a float vector","Returns the range of all elements in a vector","Returns the range of all elements in a float vector","Returns the root of two vectors","Returns the root of two vectors float","Returns the standard deviation of all elements in a vector","Returns the standard deviation of all elements in a float …","Returns the difference of two vectors","Returns the difference of two float vectors","Returns the sum of all elements in a vector","Returns the sum of all elements in a float vector","Returns the variance of all elements in a vector","Returns the variance of all elements in a float vector"],"i":[0,0,0,0,2,0,6,2,9,6,2,9,6,0,0,0,0,0,0,0,2,9,6,9,9,2,2,2,2,2,2,6,9,2,9,6,6,6,2,9,6,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,6,0,0,2,9,6,0,0,6,0,0,9,9,9,0,0,2,9,6,2,9,6,0,0,0,0,2,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,[[1,1],1],[[2,3,[4,[1]]]],[[5,5],5],[[6,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[7]],[4,[[4,[1]]]]],[[8,[2,3]]]],[[1,1],1],[[5,5],5],[1,1],[5,5],[1,1],[5,5],[[]],[[]],[[]],[9,1],[9,1],[[2,3],[[8,[[4,[1]],3]]]],[2,1],[[2,3],[[8,[1,3]]]],[[2,1],[[8,[7,3]]]],[2,[[4,[7]]]],[2,[[4,[[4,[1]]]]]],[6,1],[9,10],[2,11],[9,1],[6,1],[[6,11],1],[6,[[4,[1]]]],[[]],[[]],[[]],[1,12],[5,12],[1,12],[5,12],[1,12],[5,12],[1,12],[5,12],[1,12],[5,12],[1,12],[5,12],[6,12],[[1,1],1],[[5,5],5],[[6,11],1],[[1,1],1],[[5,5],5],[[],2],[[1,1,10],9],[[[4,[1]]],6],[[1,1],1],[[5,5],5],[[6,11]],[[1,1],1],[[5,5],5],[[9,1]],[[9,1]],[[9,10]],[[1,1],1],[[5,5],5],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[[4,[1]],[4,[1]]],7],[[[4,[5]],[4,[5]]],7],[[[4,[1]],[4,[1]]],7],[[[4,[5]],[4,[5]]],7],[[],13],[[],13],[[],13],[[[4,[1]],[4,[1]]],7],[[[4,[5]],[4,[5]]],7],[[[4,[1]],[4,[1]]],7],[[[4,[5]],[4,[5]]],7],[[[4,[1]],[4,[1]]],7],[[[4,[5]],[4,[5]]],7],[[[4,[1]]],1],[[[4,[5]]],5],[[[4,[1]],[4,[1]]],7],[[[4,[5]],[4,[5]]],7],[[[4,[1]]],1],[[[4,[5]]],5],[[[4,[1]]],1],[[[4,[5]]],5],[[[4,[1]],[4,[1]]],7],[[[4,[5]],[4,[5]]],7],[[[4,[1]]],1],[[[4,[1]],[4,[1]]],7],[[[4,[5]],[4,[5]]],7],[[[4,[1]],[4,[1]]],7],[[[4,[5]],[4,[5]]],7],[[[4,[1]],[4,[1]]],7],[[[4,[5]],[4,[5]]],7],[[[4,[1]]],1],[[[4,[5]]],5],[[[4,[1]]],7],[[[4,[5]]],7],[[[4,[1]]],1],[[[4,[5]]],5],[[[4,[1]],[4,[1]]],7],[[[4,[5]],[4,[5]]],7],[[[4,[1]]],7],[[[4,[5]]],5],[[[4,[1]],[4,[1]]],7],[[[4,[5]],[4,[5]]],7],[[[4,[1]]],1],[[[4,[5]]],5],[[[4,[1]]],7],[[[4,[5]]],5]],"c":[],"p":[[15,"i128"],[3,"DataFrame"],[15,"str"],[3,"Vec"],[15,"f64"],[3,"ZeroEquation"],[3,"String"],[4,"Result"],[3,"Equation"],[15,"char"],[15,"usize"],[15,"bool"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
